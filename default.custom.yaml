patch:
  menu:
    page_size: 6
  key_binder:
    bindings:
      - {accept: bracketleft, send: Page_Up, when: has_menu} # [上翻页
      - {accept: bracketright, send: Page_Down, when: has_menu} # ]下翻页
      - {accept: ";", send: 2, when: composing}
      - {accept: comma, send: 3, when: composing}
      - {accept: "Tab", send: Escape, when: composing}
      - {accept: Release+semicolon, send: semicolon, when: composing}
      - {accept: Release+comma, send: comma, when: composing}
      # Emacs style
      - { when: composing, accept: Control+p, send: Up }
      - { when: composing, accept: Control+n, send: Down }
      - { when: composing, accept: Control+b, send: Left }
      - { when: composing, accept: Control+f, send: Right }
      - { when: composing, accept: Control+a, send: Home }
      - { when: composing, accept: Control+e, send: End }
      - { when: composing, accept: Control+d, send: Delete }
      - { when: composing, accept: Control+k, send: Shift+Delete }
      - { when: composing, accept: Control+h, send: BackSpace }
      - { when: composing, accept: Control+g, send: Escape }
      - { when: composing, accept: Control+bracketleft, send: Escape }
      - { when: composing, accept: Alt+v, send: Page_Up }
      - { when: composing, accept: Control+v, send: Page_Down }
      # paging keys
      - { when: composing, accept: ISO_Left_Tab, send: Page_Up }
      - { when: composing, accept: Shift+Tab, send: Page_Up }
      # hotkey switch
      - { when: always, accept: Control+Shift+1, select: .next }
      - { when: always, accept: Control+Shift+2, toggle: ascii_mode }
      - { when: always, accept: Control+Shift+3, toggle: full_shape }
      - { when: always, accept: Control+Shift+4, toggle: simplification }
      - { when: always, accept: Control+Shift+5, toggle: extended_charset }
      - { when: always, accept: Control+Shift+exclam, select: .next }
      - { when: always, accept: Control+Shift+at, toggle: ascii_mode }
      - { when: always, accept: Control+Shift+numbersign, toggle: full_shape }
      - { when: always, accept: Control+Shift+dollar, toggle: simplification }
      - { when: always, accept: Control+Shift+percent, toggle: extended_charset }
      - { when: always, accept: Shift+space, toggle: full_shape }
      - { when: always, accept: Control+period, toggle: ascii_punct }
  ascii_composer/switch_key:
    Caps_Lock: null
    Control_L: noop
    Control_R: noop
    Shift_L: null
    Shift_R: null
  switches/@next:
    name: emoji_cn
    reset: 1
    states: [ 关闭emj,开启emj  ]
  'engine/filters/@before 0':
    simplifier@emoji_cn
  emoji_cn:
    opencc_config: emoji.json
    option_name: emoji_cn
    tips: all


  schema_list:
  - schema: xkjd6
  # - schema: double_pinyin_flypy
__patch:
# Rx: amorphobia/openfly:: {
  - patch/+:
      "switcher/save_options/+":
        - "openfly_enable_2nd_short"
# }
  

